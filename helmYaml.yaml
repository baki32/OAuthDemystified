[debug] Created tunnel using local port: '51022'

[debug] SERVER: "127.0.0.1:51022"

[debug] Original chart version: ""
[debug] CHART PATH: C:\Users\TomasBakita\source\repos\OAuthDemystified\mstt-0.1.0.tgz

NAME:   awesome-ladybird
REVISION: 1
RELEASED: Wed Jul  3 23:12:13 2019
CHART: mstt-0.1.0
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
addonhttpapplicationroutingnginxconfiguration:
  large-client-header-buffers: 4 256k
  namespace: kube-system
  proxy-buffer-size: 128k
  proxy-buffers: 4 256k
back:
  back:
    image: ibmkettkubernetesacr.azurecr.io/webapitest
    imagePullPolicy: Always
    imageTag: latest
  minReadySeconds: 5
  namespace: mstt-2
  replicas: 2
  serviceType: ClusterIP
ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  enabled: true
  hosts:
  - host: mstt2.0d1459123cdb4220b8b5.westeurope.aksapp.io
    paths:
    - path: /(.*)
      pathName: backend
      serviceName: msttclusterip
      servicePort: 80
    serviceName: msttclusterip
    servicePort: msttclusterip
  name: msttingress
  namespace: mstt-2
  tls:
  - hosts:
    - mstt2.0d1459123cdb4220b8b5.westeurope.aksapp.io
    secretName: tls-secret
msttclusterip:
  namespace: mstt-2
  serviceType: ClusterIP
webfront:
  minReadySeconds: 5
  namespace: mstt-2
  replicas: 2
  webfront:
    aspnetcoreenvironment: Development
    image: ibmkettkubernetesacr.azurecr.io/oauthdemystifiedtt
    imagePullPolicy: Always
    imageTag: latest
    protocol: https
    storagesecret: /iVNlvgYXi5+CtDogwqLkZKX4tunqdPTnEq7yvEDlvWjXSkCNcS44VWsMspufqtjszFXhFz8b6eNylJHdP+BUg==

HOOKS:
MANIFEST:

---
# Source: mstt/templates/addon-http-application-routing-nginx-configuration.yaml
apiVersion: v1
data:
  large-client-header-buffers: 4 256k
  proxy-buffer-size: 128k
  proxy-buffers: 4 256k
kind: ConfigMap
metadata:
  labels:
    app: addon-http-application-routing-ingress-nginx
    chart: 'mstt-0.1.0'
    heritage: 'Tiller'
    kubernetes.io/cluster-service: "true"
    release: 'awesome-ladybird'
  name: addon-http-application-routing-nginx-configuration
  namespace: 'kube-system'
---
# Source: mstt/templates/back.svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    chart: 'mstt-0.1.0'
    heritage: 'Tiller'
    release: 'awesome-ladybird'
  name: back
  namespace: 'mstt-2'
spec:
  ports:
  - port: 80
  selector:
    app: 'back'
  type: 'ClusterIP'
---
# Source: mstt/templates/msttclusterip.svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    chart: 'mstt-0.1.0'
    heritage: 'Tiller'
    release: 'awesome-ladybird'
  name: msttclusterip
  namespace: mstt-2
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: web-front
---
# Source: mstt/templates/back.deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    chart: 'mstt-0.1.0'
    heritage: 'Tiller'
    release: 'awesome-ladybird'
  name: back
  annotations:
    timestamp: "20190703211213"
  namespace: 'mstt-2'
spec:
  minReadySeconds: 5
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: back
    spec:
      containers:
      - image: 'ibmkettkubernetesacr.azurecr.io/webapitest:latest'
        imagePullPolicy: 'Always'
        name: back
        ports:
        - containerPort: 80
---
# Source: mstt/templates/web-front.deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    chart: 'mstt-0.1.0'
    heritage: 'Tiller'
    release: 'awesome-ladybird'
  name: web-front
  annotations:
    timestamp: "20190703211213"
  namespace: 'mstt-2'
spec:
  minReadySeconds: 5
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: web-front
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: 'Development'
        - name: PROTOCOL
          value: 'https'
        - name: STORAGE_SECRET
          value: '/iVNlvgYXi5+CtDogwqLkZKX4tunqdPTnEq7yvEDlvWjXSkCNcS44VWsMspufqtjszFXhFz8b6eNylJHdP+BUg=='
        image: 'ibmkettkubernetesacr.azurecr.io/oauthdemystifiedtt:latest'
        imagePullPolicy: 'Always'
        livenessProbe:
          httpGet:
            path: /liveness
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 60
        name: web-front
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /hc
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 60
---
# Source: mstt/templates/web-front.deployment.ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: msttingress
  namespace: mstt-2
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    
spec:
  tls:
    - hosts:
      - mstt2.0d1459123cdb4220b8b5.westeurope.aksapp.io
      secretName: tls-secret
  rules:
  - host: mstt2.0d1459123cdb4220b8b5.westeurope.aksapp.io
    http:
      paths:
        - path: /(.*)
          backend:
            serviceName: msttclusterip
            servicePort: 80
---
# Source: mstt/templates/cert.yaml
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: tls-secret
  namespace:  mstt-2
spec:
  secretName: tls-secret
  dnsNames:
  - mstt2.0d1459123cdb4220b8b5.westeurope.aksapp.io
  acme:
    config:
    - http01:
        ingressClass: nginx
      domains:
      - mstt2.0d1459123cdb4220b8b5.westeurope.aksapp.io
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
---
# Source: mstt/templates/cluster-issuer.yaml
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: tomas.bakita@outlook.com
    privateKeySecretRef:
      name: letsencrypt-staging
    http01: {}
